import { MigrationInterface, QueryRunner } from "typeorm";

export class AutoMigration1761841912089 implements MigrationInterface {
    name = 'AutoMigration1761841912089'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "marca" ("id" SERIAL NOT NULL, "nombre" character varying(100) NOT NULL, "habilitado" boolean NOT NULL DEFAULT true, "public_id" character varying(255) NOT NULL, "secure_url" character varying(500) NOT NULL, CONSTRAINT "UQ_4e6b4984c6761c6a15daa395fdd" UNIQUE ("nombre"), CONSTRAINT "PK_d41856ffd597050edc69ea5188d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "categoria" ("id" SERIAL NOT NULL, "nombre" character varying(100) NOT NULL, "habilitado" boolean NOT NULL DEFAULT true, "public_id" character varying(255) NOT NULL, "secure_url" character varying(500) NOT NULL, CONSTRAINT "UQ_6771d90221138c5bf48044fd73d" UNIQUE ("nombre"), CONSTRAINT "PK_f027836b77b84fb4c3a374dc70d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "entrada" ("id" SERIAL NOT NULL, "fecha" date NOT NULL, "hora" TIME NOT NULL, "habilitado" boolean NOT NULL DEFAULT true, CONSTRAINT "PK_e7a5c037c8d52f966bc70325e5b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "detalle_entrada" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "cantidad" integer NOT NULL DEFAULT '1', "id_producto" integer NOT NULL, "id_entrada" integer NOT NULL, CONSTRAINT "PK_0c8bed66d22aca213f510ff0631" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "tipo_entrega" ("id" SERIAL NOT NULL, "nombre" character varying(50) NOT NULL DEFAULT 'Sin nombre', CONSTRAINT "UQ_1af5fddf6fbeee8f36f9029875e" UNIQUE ("nombre"), CONSTRAINT "PK_063242db51d8b72b07fab8157ee" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "tipo_comprobante" ("id" SERIAL NOT NULL, "nombre" character varying(50) NOT NULL, CONSTRAINT "UQ_e0a7c5714e7c21bdcc2fd41f8ea" UNIQUE ("nombre"), CONSTRAINT "PK_cbe299324a18b424d39c8beb50e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "comprobante" ("id" SERIAL NOT NULL, "comprobante" character varying(500), "xml" character varying(500), "cdr" character varying(500), "id_tipo_comprobante" integer NOT NULL, "id_pedido" integer NOT NULL, CONSTRAINT "REL_4a9e94f801cb6df4024484f945" UNIQUE ("id_pedido"), CONSTRAINT "PK_135594a557045b330b999e49491" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "estado_pedido" ("id" SERIAL NOT NULL, "nombre" character varying(50) NOT NULL, CONSTRAINT "UQ_94048f70d377eb9f8ecc54e0150" UNIQUE ("nombre"), CONSTRAINT "PK_322a39d3ad3ad13b3f3213e0f65" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "metodo_pago" ("id" SERIAL NOT NULL, "nombre" character varying(50) NOT NULL, CONSTRAINT "UQ_bbda210e1d462da3bff07460481" UNIQUE ("nombre"), CONSTRAINT "PK_a7bf4e34ece4c63524bbe79aa5d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "pedido" ("id" SERIAL NOT NULL, "codigo" uuid NOT NULL, "fecha" date NOT NULL, "hora" TIME NOT NULL, "total" numeric(10,2) NOT NULL DEFAULT '0', "direccion" point NOT NULL, "ultima_fecha" date, "id_estado_pedido" integer NOT NULL, "id_tipo_entrega" integer NOT NULL, "id_metodo_pago" integer NOT NULL, "id_usuario" integer NOT NULL, CONSTRAINT "UQ_7e1b57613e133690e2089c68e05" UNIQUE ("codigo"), CONSTRAINT "PK_af8d8b3d07fae559c37f56b3f43" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "detalle_pedido" ("id" SERIAL NOT NULL, "precio" numeric(10,2) NOT NULL, "cantidad" integer NOT NULL DEFAULT '1', "subtotal" numeric(10,2) NOT NULL, "id_producto" integer NOT NULL, "id_pedido" integer NOT NULL, CONSTRAINT "PK_123bec7ab52f5db0a11766f87c0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "imagen_producto" ("id" SERIAL NOT NULL, "public_id" character varying(255) NOT NULL, "secure_url" character varying(500) NOT NULL, "id_producto" integer NOT NULL, CONSTRAINT "PK_2a4b89ebcf0161f7b85a19a62c5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "producto" ("id" SERIAL NOT NULL, "codigo" uuid NOT NULL DEFAULT uuid_generate_v4(), "nombre" character varying(255) NOT NULL, "descripcion" character varying(1000) DEFAULT 'Descripci√≥n...', "peso_kg" double precision NOT NULL DEFAULT '0', "precio" double precision NOT NULL DEFAULT '0', "habilitado" boolean NOT NULL DEFAULT true, "porcentaje_descuento" integer NOT NULL DEFAULT '0', "id_categoria" integer NOT NULL, "id_marca" integer NOT NULL, CONSTRAINT "UQ_4ecaa777d3efc10b5a6327cfe42" UNIQUE ("codigo"), CONSTRAINT "UQ_d86d179360134b4b74bda750664" UNIQUE ("nombre"), CONSTRAINT "PK_5be023b11909fe103e24c740c7d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "detalle_carrito" ("id" SERIAL NOT NULL, "cantidad" integer NOT NULL DEFAULT '1', "id_producto" integer NOT NULL, "id_carrito" integer NOT NULL, CONSTRAINT "PK_e699fe85a01b009766c7040a149" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "carrito" ("id" SERIAL NOT NULL, "updated_at" TIMESTAMP NOT NULL, "id_usuario" integer NOT NULL, CONSTRAINT "REL_2f59229fe3184c1a775de06d16" UNIQUE ("id_usuario"), CONSTRAINT "PK_a8af129f65d19017ca8afe737d3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "usuario" ("id" SERIAL NOT NULL, "sub" character varying(36) NOT NULL, "nombre" character varying(100), "apellido" character varying(100), "dni" character varying(15), "numero" character varying(20), "correo" character varying(255) NOT NULL, "habilitado" boolean NOT NULL DEFAULT true, "id_tipo_usuario" integer NOT NULL, CONSTRAINT "UQ_914d5e28c0c37219af0a6911f0f" UNIQUE ("sub"), CONSTRAINT "UQ_349ecb64acc4355db443ca17cbd" UNIQUE ("correo"), CONSTRAINT "PK_a56c58e5cabaa04fb2c98d2d7e2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "tipo_usuario" ("id" SERIAL NOT NULL, "nombre" character varying(100) NOT NULL, CONSTRAINT "PK_2abd2759a18236cbf357c06dea0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "tarifa_cobertura" ("id" SERIAL NOT NULL, "direccion" character varying(255) NOT NULL, "punto_direccion" point NOT NULL, "centro_cobertura" point NOT NULL, "radio_cobertura" double precision NOT NULL DEFAULT '0', "tarifa_kg_km" numeric(10,2) NOT NULL DEFAULT '0', "tarifa_minima" numeric(10,2) NOT NULL DEFAULT '0', CONSTRAINT "UQ_c7885e73675499822233eca964f" UNIQUE ("direccion"), CONSTRAINT "PK_9fc2100ba22cd6ddc98219325d8" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "publicacion" ("id" SERIAL NOT NULL, "titulo" character varying(100) NOT NULL, "url_redireccion" character varying(500), "public_id" character varying(255) NOT NULL, "secure_url" character varying(500) NOT NULL, CONSTRAINT "UQ_aa1fd629500eeb2a31dac5afeb9" UNIQUE ("titulo"), CONSTRAINT "PK_c14e747a7cc735a880bfbf58a70" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "detalle_entrada" ADD CONSTRAINT "FK_1d93107ced3fd1adccfa23c36a6" FOREIGN KEY ("id_producto") REFERENCES "producto"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "detalle_entrada" ADD CONSTRAINT "FK_fad935e888d5f0da154fe93cbe1" FOREIGN KEY ("id_entrada") REFERENCES "entrada"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "comprobante" ADD CONSTRAINT "FK_cc08c305816220c1020b845706c" FOREIGN KEY ("id_tipo_comprobante") REFERENCES "tipo_comprobante"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "comprobante" ADD CONSTRAINT "FK_4a9e94f801cb6df4024484f9455" FOREIGN KEY ("id_pedido") REFERENCES "pedido"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "pedido" ADD CONSTRAINT "FK_7eca733e235d15e61c783039093" FOREIGN KEY ("id_estado_pedido") REFERENCES "estado_pedido"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "pedido" ADD CONSTRAINT "FK_a90f64fa06d462fb4e1faf11653" FOREIGN KEY ("id_tipo_entrega") REFERENCES "tipo_entrega"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "pedido" ADD CONSTRAINT "FK_8606b56a20e0a912316264801d5" FOREIGN KEY ("id_metodo_pago") REFERENCES "metodo_pago"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "pedido" ADD CONSTRAINT "FK_512f2a53c873366a90180938ee5" FOREIGN KEY ("id_usuario") REFERENCES "usuario"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "detalle_pedido" ADD CONSTRAINT "FK_1e7d99f4f8c18bbcd15fc0fbe9b" FOREIGN KEY ("id_producto") REFERENCES "producto"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "detalle_pedido" ADD CONSTRAINT "FK_358afcceb14c2f910d152a3ad2f" FOREIGN KEY ("id_pedido") REFERENCES "pedido"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "imagen_producto" ADD CONSTRAINT "FK_92e5a751988a5d7f5dd638b9ff4" FOREIGN KEY ("id_producto") REFERENCES "producto"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "producto" ADD CONSTRAINT "FK_e87a319f3da1b6da5fedd1988be" FOREIGN KEY ("id_categoria") REFERENCES "categoria"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "producto" ADD CONSTRAINT "FK_116783c6bfbff483096740514be" FOREIGN KEY ("id_marca") REFERENCES "marca"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "detalle_carrito" ADD CONSTRAINT "FK_1b6e6a50069405b9ca762853dd5" FOREIGN KEY ("id_producto") REFERENCES "producto"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "detalle_carrito" ADD CONSTRAINT "FK_6de25637302f36d153e4b80af47" FOREIGN KEY ("id_carrito") REFERENCES "carrito"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "carrito" ADD CONSTRAINT "FK_2f59229fe3184c1a775de06d16c" FOREIGN KEY ("id_usuario") REFERENCES "usuario"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "usuario" ADD CONSTRAINT "FK_1961b44873a11fcc9640c381834" FOREIGN KEY ("id_tipo_usuario") REFERENCES "tipo_usuario"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "usuario" DROP CONSTRAINT "FK_1961b44873a11fcc9640c381834"`);
        await queryRunner.query(`ALTER TABLE "carrito" DROP CONSTRAINT "FK_2f59229fe3184c1a775de06d16c"`);
        await queryRunner.query(`ALTER TABLE "detalle_carrito" DROP CONSTRAINT "FK_6de25637302f36d153e4b80af47"`);
        await queryRunner.query(`ALTER TABLE "detalle_carrito" DROP CONSTRAINT "FK_1b6e6a50069405b9ca762853dd5"`);
        await queryRunner.query(`ALTER TABLE "producto" DROP CONSTRAINT "FK_116783c6bfbff483096740514be"`);
        await queryRunner.query(`ALTER TABLE "producto" DROP CONSTRAINT "FK_e87a319f3da1b6da5fedd1988be"`);
        await queryRunner.query(`ALTER TABLE "imagen_producto" DROP CONSTRAINT "FK_92e5a751988a5d7f5dd638b9ff4"`);
        await queryRunner.query(`ALTER TABLE "detalle_pedido" DROP CONSTRAINT "FK_358afcceb14c2f910d152a3ad2f"`);
        await queryRunner.query(`ALTER TABLE "detalle_pedido" DROP CONSTRAINT "FK_1e7d99f4f8c18bbcd15fc0fbe9b"`);
        await queryRunner.query(`ALTER TABLE "pedido" DROP CONSTRAINT "FK_512f2a53c873366a90180938ee5"`);
        await queryRunner.query(`ALTER TABLE "pedido" DROP CONSTRAINT "FK_8606b56a20e0a912316264801d5"`);
        await queryRunner.query(`ALTER TABLE "pedido" DROP CONSTRAINT "FK_a90f64fa06d462fb4e1faf11653"`);
        await queryRunner.query(`ALTER TABLE "pedido" DROP CONSTRAINT "FK_7eca733e235d15e61c783039093"`);
        await queryRunner.query(`ALTER TABLE "comprobante" DROP CONSTRAINT "FK_4a9e94f801cb6df4024484f9455"`);
        await queryRunner.query(`ALTER TABLE "comprobante" DROP CONSTRAINT "FK_cc08c305816220c1020b845706c"`);
        await queryRunner.query(`ALTER TABLE "detalle_entrada" DROP CONSTRAINT "FK_fad935e888d5f0da154fe93cbe1"`);
        await queryRunner.query(`ALTER TABLE "detalle_entrada" DROP CONSTRAINT "FK_1d93107ced3fd1adccfa23c36a6"`);
        await queryRunner.query(`DROP TABLE "publicacion"`);
        await queryRunner.query(`DROP TABLE "tarifa_cobertura"`);
        await queryRunner.query(`DROP TABLE "tipo_usuario"`);
        await queryRunner.query(`DROP TABLE "usuario"`);
        await queryRunner.query(`DROP TABLE "carrito"`);
        await queryRunner.query(`DROP TABLE "detalle_carrito"`);
        await queryRunner.query(`DROP TABLE "producto"`);
        await queryRunner.query(`DROP TABLE "imagen_producto"`);
        await queryRunner.query(`DROP TABLE "detalle_pedido"`);
        await queryRunner.query(`DROP TABLE "pedido"`);
        await queryRunner.query(`DROP TABLE "metodo_pago"`);
        await queryRunner.query(`DROP TABLE "estado_pedido"`);
        await queryRunner.query(`DROP TABLE "comprobante"`);
        await queryRunner.query(`DROP TABLE "tipo_comprobante"`);
        await queryRunner.query(`DROP TABLE "tipo_entrega"`);
        await queryRunner.query(`DROP TABLE "detalle_entrada"`);
        await queryRunner.query(`DROP TABLE "entrada"`);
        await queryRunner.query(`DROP TABLE "categoria"`);
        await queryRunner.query(`DROP TABLE "marca"`);
    }

}
